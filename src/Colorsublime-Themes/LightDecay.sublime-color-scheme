{
    "name": "Light Decay",
    "author": "decaycs",
    "variables":
    {
        "black": "#dee1e6",
        "dark_gray": "#d9dce1",
        "light_gray": "#d4d7dc",
        "red": "#bd3c42",
        "green": "#69b373",
        "yellow": "#ceac67",
        "blue": "#4d82c8",
        "magenta": "#a367cb",
        "cyan": "#519bc6",
        "orange": "#e9a180",
        "gray": "#989ba0",
        "white": "#101419",
        "indent_guide": "#989ba0",

        "selection": "#989ba04D",
        "selection_border": "#989ba0",
    },
    "globals":
    {
        "foreground": "var(white)",
        "background": "var(black)",
        "caret": "var(white)",
        "invisibles": "color(var(white) alpha(0.35))",
        "line_highlight": "var(dark_gray)",
        "selection": "var(selection)",
        "selection_border": "var(selection_border)",
        "misspelling": "var(red)",
        "active_guide": "color(var(indent_guide))",
        "find_highlight_foreground": "var(black)",
        "find_highlight": "var(blue)",
        "brackets_options": "underline",
        "brackets_foreground": "color(var(white) alpha(0.65))",
        "bracket_contents_options": "underline",
        "bracket_contents_foreground": "color(var(white) alpha(0.65))",
        "tags_options": "stippled_underline",
        "accent": "var(light_gray)",
        "background": "var(black)",
        "brackets_foreground": "var(white)",
        "brackets_options": "underline",
        "caret": "var(white",
        "find_highlight_foreground": "var(black)",
        "find_highlight": "var(blue)",
        "foreground": "var(white)",
        "guide": "var(indent_guide)",
        "gutter_foreground": "var(light_gray)",
        "gutter": "var(black)",
        "highlight": "var(dark_gray)",
        "inactive_selection": "var(light_gray)",
        "invisibles": "var(light_gray)",
        "line_diff_added": "var(green)",
        "line_diff_deleted": "var(red)",
        "line_diff_modified": "var(mangenta)",
        "line_highlight": "var(light_gray)",
        "minimap_border": "color(var(dark_gray) alpha(0.32))",
        "misspelling": "var(red)",
        "selection_border": "var(light_gray)",
        "selection": "var(light_gray)",
        "shadow_width": "8",
        "shadow": "var(dark_gray)",
        "stack_guide": "var(indent_guide)",
        "tags_foreground": "var(light_gray)",
        "tags_options": "underline"
    },
    "rules":
    [
        {
            "name": "Comment",
            "scope": "comment",
            "foreground": "var(gray)"
        }
,        {
            "name": "String",
            "scope": "string",
            "foreground": "var(green)"
        },
        {
            "name": "Number",
            "scope": "constant.numeric",
            "foreground": "var(red)"
        },
        {
            "name": "Built-in constant",
            "scope": "constant.language",
            "foreground": "var(magenta)"
        },
        {
            "name": "User-defined constant",
            "scope": "constant.character, constant.other",
            "foreground": "var(magenta)"
        },
        {
            "name": "Variable",
            "scope": "variable",
            "foreground": "var(white)"
        },
        {
            "name": "Keyword",
            "scope": "keyword - (source.c keyword.operator | source.c++ keyword.operator | source.objc keyword.operator | source.objc++ keyword.operator), keyword.operator.word",
            "foreground": "var(magenta)"
        },
        {
            "name": "Annotation Punctuation",
            "scope": "punctuation.definition.annotation",
            "foreground": "var(magenta)"
        },
        {
            "name": "JavaScript Dollar",
            "scope": "variable.other.dollar.only.js",
            "foreground": "var(red)"
        },
        {
            "name": "Storage",
            "scope": "storage",
            "foreground": "var(red)"
        },
        {
            "name": "Storage type",
            "scope": "storage.type",
            "foreground": "var(magenta)",
            
        },
        {
            "name": "Entity name",
            "scope": "entity.name - (entity.name.filename | entity.name.section | entity.name.tag | entity.name.label)",
            "foreground": "var(blue)"
        },
        {
            "name": "Inherited class",
            "scope": "entity.other.inherited-class",
            "foreground": "var(magenta)",
            
        },
        {
            "name": "Function argument",
            "scope": "variable.parameter - (source.c | source.c++ | source.objc | source.objc++)",
            "foreground": "var(cyan)",
            
        },
        {
            "name": "Language variable",
            "scope": "variable.language",
            "foreground": "var(magenta)",
            
        },
        {
            "name": "Tag name",
            "scope": "entity.name.tag",
            "foreground": "var(red)"
        },
        {
            "name": "Tag attribute",
            "scope": "entity.other.attribute-name",
            "foreground": "var(blue)"
        },
        {
            "name": "Function call",
            "scope": "variable.function, variable.annotation",
            "foreground": "var(blue)"
        },
        {
            "name": "Library function",
            "scope": "support.function, support.macro",
            "foreground": "var(blue)"
        },
        {
            "name": "Library constant",
            "scope": "support.constant",
            "foreground": "var(red)"
        },
        {
            "name": "Library class/type",
            "scope": "support.type, support.class",
            "foreground": "var(yellow)",
            
        },
        {
            "name": "Library variable",
            "scope": "support.other.variable"
        },
        {
            "name": "Invalid",
            "scope": "invalid",
            "foreground": "var(white)",
            "background": "var(red)"
        },
        {
            "name": "Invalid deprecated",
            "scope": "invalid.deprecated",
            "foreground": "var(white)",
            "background": "var(magenta)"
        },
        {
            "name": "JSON String",
            "scope": "meta.structure.dictionary.json string.quoted.double.json",
            "foreground": "var(green)"
        },
        {
            "name": "YAML String",
            "scope": "string.unquoted.yaml",
            "foreground": "var(orange)"
        },
        {
            "name": "diff.header",
            "scope": "meta.diff, meta.diff.header",
            "foreground": "var(yellow)"
        },
        {
            "name": "markup headings",
            "scope": "markup.heading",
            
        },
        {
            "name": "markup headings",
            "scope": "markup.heading punctuation.definition.heading",
            "foreground": "var(orange)"
        },
        {
            "name": "markup h1",
            "scope": "markup.heading.1 punctuation.definition.heading",
            "foreground": "var(red)"
        },
        {
            "name": "markup links",
            "scope": "markup.underline.link",
            "foreground": "var(blue)"
        },
        {
            "name": "markup bold",
            "scope": "markup.bold",
            
        },
        {
            "name": "markup italic",
            "scope": "markup.italic",
            
        },
        {
            "name": "markup bold/italic",
            "scope": "markup.italic markup.bold | markup.bold markup.italic",
            
        },
        {
            "name": "markup hr",
            "scope": "punctuation.definition.thematic-break",
            "foreground": "var(yellow)"
        },
        {
            "name": "markup blockquote",
            "scope": "markup.quote punctuation.definition.blockquote",
            "foreground": "var(yellow)"
        },
        {
            "name": "markup bullets",
            "scope": "markup.list.numbered.bullet",
            "foreground": "var(magenta)"
        },
        {
            "name": "markup bullets",
            "scope": "markup.list.unnumbered.bullet | (markup.list.numbered punctuation.definition)",
            "foreground": "color(var(white) alpha(0.67))"
        },
        {
            "name": "markup code",
            "scope": "markup.raw",
            "background": "color(var(white) alpha(0.094))"
        },
        {
            "name": "markup punctuation",
            "scope": "markup.raw punctuation.definition.raw",
            "foreground": "color(var(white) alpha(0.67))"
        },
        {
            "name": "markup punctuation",
            "scope": "text & (punctuation.definition.italic | punctuation.definition.bold | punctuation.definition.raw | punctuation.definition.link | punctuation.definition.metadata | punctuation.definition.image | punctuation.separator.table-cell | punctuation.section.table-header | punctuation.definition.constant)",
            "foreground": "color(var(white) alpha(0.67))"
        },
        {
            "name": "diff.deleted",
            "scope": "markup.deleted",
            "foreground": "var(red)"
        },
        {
            "name": "diff.inserted",
            "scope": "markup.inserted",
            "foreground": "var(green)"
        },
        {
            "name": "diff.changed",
            "scope": "markup.changed",
            "foreground": "var(magenta)"
        },
        {
            "scope": "constant.numeric.line-number.find-in-files - match",
            "foreground": "color(var(magenta) alpha(0.63))"
        },
        {
            "scope": "entity.name.filename",
            "foreground": "var(yellow)"
        },
        {
            "scope": "message.error",
            "foreground": "var(red)"
        },
        {
            "name": "[Markdown] Fenced Code Block",
            "scope": "text.html.markdown punctuation.definition.raw.code-fence.begin.markdown, text.html.markdown punctuation.definition.raw.code-fence.end.markdown, text.html.markdown markup.raw.code-fence.markdown constant.other.language-name.markdown",
            "foreground": "var(white)"
            },
            {
                "name": "[Markdown] List Bullet",
                "scope": "text.html.markdown punctuation.definition.list_item.markdown, text.html.markdown markup.list.numbered.bullet.markdown",
                "foreground": "var(red)"
            },
            {
                "name": "[Markdown] Quote Punctuation",
      "scope": "text.html.markdown markup.quote.markdown punctuation.definition.blockquote.markdown",
      "foreground": "var(white)"
    },
    {
      "name": "[Markdown] Link Description",
      "scope": "text.html.markdown meta.link.inline.description.markdown, text.html.markdown meta.image.inline.description.markdown, text.html.markdown meta.link.reference.description.markdown, text.html.markdown constant.other.reference.link.markdown, text.html.markdown entity.name.reference.link.markdown",
      "foreground": "var(blue)"
    },
    {
      "name": "[Markdown] Link Punctuation",
      "scope": "text.html.markdown punctuation.definition.link.begin.markdown, text.html.markdown punctuation.definition.link.end.markdown, text.html.markdown punctuation.definition.image.begin.markdown, text.html.markdown punctuation.definition.image.end.markdown, text.html.markdown punctuation.definition.constant.begin.markdown, text.html.markdown punctuation.definition.constant.end.markdown",
      "foreground": "var(red)"
    },
    {
      "name": "[Markdown] Table Punctuation",
      "scope": "text.html.markdown punctuation.separator.table-cell.markdown, text.html.markdown punctuation.section.table-header.markdown",
      "foreground": "var(red)"
    },
    {
      "name": "[Markdown] Table Header",
      "scope": "text.html.markdown meta.table.header.markdown",
      "foreground": "var(blue)"
    },
    {
      "name": "[Markdown] Horizontal Line",
      "scope": "text.html.markdown punctuation.definition.thematic-break.markdown",
      "foreground": "var(blue)",
      
    },
    ]
}
